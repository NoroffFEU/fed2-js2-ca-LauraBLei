{"version":3,"file":"login-riOoMjLU.js","sources":["../../src/js/api/auth/login.js","../../src/js/ui/auth/login.js","../../src/js/router/views/login.js"],"sourcesContent":["import { API_AUTH_LOGIN } from \"../constants\";\r\nimport { headers } from \"../headers\";\r\n/**\r\n * Will login user - and store information in local storage - if email and password are correct.\r\n * @param {object} userinfo = object that contains email and password.\r\n * @param {string} email - user email for login.\r\n * @param {string} password - user password for login.\r\n * @example\r\n * ```js\r\n * login({email:\"email@gmail.com\", password:\"password123\"})\r\n * ```\r\n */\r\n\r\nexport async function login({ email, password }) {\r\n  const body = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(API_AUTH_LOGIN, {\r\n      method: \"POST\",\r\n      headers: headers(),\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (response.ok) {\r\n      alert(`Successfully logged in\"`);\r\n      const data = await response.json();\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data.data));\r\n      localStorage.setItem(\"token\", JSON.stringify(data.data.accessToken));\r\n      window.location.href = \"/\";\r\n    }\r\n  } catch (error) {\r\n    alert(\"Something went wrong trying to login\");\r\n  }\r\n}\r\n","import { login } from \"../../api/auth/login\";\r\n\r\n/**\r\n * Fetch login form data and run the fetch call aka. login\r\n * @param {object} event\r\n * @example\r\n * ```js\r\n * form.addEventListener(\"submit\", onLogin)\r\n * ```\r\n */\r\n\r\nexport async function onLogin(event) {\r\n  event.preventDefault();\r\n  const formData = new FormData(event.target);\r\n  const loginData = {\r\n    email: formData.get(\"email\"),\r\n    password: formData.get(\"password\"),\r\n  };\r\n\r\n  await login(loginData);\r\n}\r\n","import { onLogin } from \"../../ui/auth/login\";\r\n\r\nconst form = document.forms.login;\r\n\r\nform.addEventListener(\"submit\", onLogin);\r\n"],"names":["login","email","password","body","response","API_AUTH_LOGIN","headers","data","onLogin","event","formData","loginData","form"],"mappings":"iDAaO,eAAeA,EAAM,CAAE,MAAAC,EAAO,SAAAC,GAAY,CAC/C,MAAMC,EAAO,CACX,MAAOF,EACP,SAAUC,CACd,EAEE,GAAI,CACF,MAAME,EAAW,MAAM,MAAMC,EAAgB,CAC3C,OAAQ,OACR,QAASC,EAAS,EAClB,KAAM,KAAK,UAAUH,CAAI,CAC/B,CAAK,EACD,GAAIC,EAAS,GAAI,CACf,MAAM,yBAAyB,EAC/B,MAAMG,EAAO,MAAMH,EAAS,OAC5B,aAAa,QAAQ,WAAY,KAAK,UAAUG,EAAK,IAAI,CAAC,EAC1D,aAAa,QAAQ,QAAS,KAAK,UAAUA,EAAK,KAAK,WAAW,CAAC,EACnE,OAAO,SAAS,KAAO,GACxB,CACF,MAAe,CACd,MAAM,sCAAsC,CAC7C,CACH,CCxBO,eAAeC,EAAQC,EAAO,CACnCA,EAAM,eAAc,EACpB,MAAMC,EAAW,IAAI,SAASD,EAAM,MAAM,EACpCE,EAAY,CAChB,MAAOD,EAAS,IAAI,OAAO,EAC3B,SAAUA,EAAS,IAAI,UAAU,CACrC,EAEE,MAAMV,EAAMW,CAAS,CACvB,CClBA,MAAMC,EAAO,SAAS,MAAM,MAE5BA,EAAK,iBAAiB,SAAUJ,CAAO"}