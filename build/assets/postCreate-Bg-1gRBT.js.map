{"version":3,"file":"postCreate-Bg-1gRBT.js","sources":["../../src/js/api/post/create.js","../../src/js/ui/post/create.js","../../src/js/router/views/postCreate.js"],"sourcesContent":["import { API_SOCIAL_POSTS } from \"../constants\";\r\nimport { headers } from \"../headers\";\r\n\r\n/**\r\n * Makes a POST call to the API - creating a post\r\n * @param {object} postInfo - object with the post info in it (title, body, tags, media)\r\n * @param {string} postInfo.title - a string that is the title of the post.\r\n * @param {string} postInfo.body - a string of text that is the body of the post.\r\n * @param {Array} postInfo.tags - an array with strings, that are the tags of the post.\r\n * @param {object} postInfo.media - an object that includes url: \"string\", alt: \"string\".\r\n * @example\r\n * ```js\r\n * createPost({\"PostTitle\", \"This is some text for the post\", [\"tagOne\", \"tagTwo\"], {url: \"SomeImageUrl\", alt: \"Some Image Text\"}})\r\n * ```\r\n */\r\n\r\nexport async function createPost({ title, body, tags, media }) {\r\n  const bodyElement = {\r\n    title: title,\r\n    body: body,\r\n    tags: tags,\r\n    media: media,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(API_SOCIAL_POSTS, {\r\n      method: \"POST\",\r\n      headers: headers(),\r\n      body: JSON.stringify(bodyElement),\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert(\"You created a post!\");\r\n      window.location.href = \"/profile/\";\r\n    }\r\n  } catch (error) {\r\n    alert(\"Something went wrong trying to create a post!\");\r\n  }\r\n}\r\n","import { createPost } from \"../../api/post/create\";\r\n\r\n/**\r\n * gets the form data - and sends in the data to create a post.\r\n * @param {object} event\r\n * @example\r\n * ```js\r\n * form.addEventListener(\"submit\", onCreatePost)\r\n * ```\r\n */\r\nexport async function onCreatePost(event) {\r\n  event.preventDefault();\r\n\r\n  const formData = new FormData(event.target);\r\n\r\n  const media = {\r\n    url: formData.get(\"url\"),\r\n    alt: formData.get(\"alt\"),\r\n  };\r\n\r\n  const createPostData = {\r\n    title: formData.get(\"title\"),\r\n    body: formData.get(\"text\"),\r\n    tags: formData.get(\"tags\").split(\" \"),\r\n    media: media,\r\n  };\r\n\r\n  createPost(createPostData);\r\n}\r\n","import { makeHeader } from \"../../ui/global/header\";\r\nimport { onCreatePost } from \"../../ui/post/create\";\r\nimport { authGuard } from \"../../utilities/authGuard\";\r\n\r\nconst runPage = () => {\r\n  authGuard();\r\n  const header = document.querySelector(\"header\");\r\n  makeHeader(header);\r\n\r\n  const form = document.forms.createPost;\r\n\r\n  form.addEventListener(\"submit\", onCreatePost);\r\n};\r\n\r\nrunPage();\r\n"],"names":["createPost","title","body","tags","media","bodyElement","API_SOCIAL_POSTS","headers","onCreatePost","event","formData","createPostData","runPage","authGuard","header","makeHeader"],"mappings":"sIAgBO,eAAeA,EAAW,CAAE,MAAAC,EAAO,KAAAC,EAAM,KAAAC,EAAM,MAAAC,CAAK,EAAI,CAC7D,MAAMC,EAAc,CAClB,MAAOJ,EACP,KAAMC,EACN,KAAMC,EACN,MAAOC,CACX,EAEE,GAAI,EACe,MAAM,MAAME,EAAkB,CAC7C,OAAQ,OACR,QAASC,EAAS,EAClB,KAAM,KAAK,UAAUF,CAAW,CACtC,CAAK,GAEY,KACX,MAAM,qBAAqB,EAC3B,OAAO,SAAS,KAAO,YAE1B,MAAe,CACd,MAAM,+CAA+C,CACtD,CACH,CC5BO,eAAeG,EAAaC,EAAO,CACxCA,EAAM,eAAc,EAEpB,MAAMC,EAAW,IAAI,SAASD,EAAM,MAAM,EAEpCL,EAAQ,CACZ,IAAKM,EAAS,IAAI,KAAK,EACvB,IAAKA,EAAS,IAAI,KAAK,CAC3B,EAEQC,EAAiB,CACrB,MAAOD,EAAS,IAAI,OAAO,EAC3B,KAAMA,EAAS,IAAI,MAAM,EACzB,KAAMA,EAAS,IAAI,MAAM,EAAE,MAAM,GAAG,EACpC,MAAON,CACX,EAEEJ,EAAWW,CAAc,CAC3B,CCxBA,MAAMC,EAAU,IAAM,CACpBC,IACA,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CC,EAAWD,CAAM,EAEJ,SAAS,MAAM,WAEvB,iBAAiB,SAAUN,CAAY,CAC9C,EAEAI,EAAS"}